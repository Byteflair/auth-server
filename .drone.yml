workspace:
  base: /drone
  path: src
pipeline:
  #Restauramos la cache
  sftp_cache_restore:
    image: plugins/sftp-cache
    server: dev.byteflair.com:22
    path: /home/deployment/cache/repository/
    restore: true
    mount: /drone/.m2/
    when:
      branch: [master, dev, feat/drone]
  build:
    image: maven:3-jdk-8
    commands:
    #Copiar settings de maven
     - if [ -d "/drone/.m2" ]; then
           cp -a /drone/.m2 /root ;
       fi
    #Copiar settings de maven
     - cp /drone/src/.drone/settings.xml /root/.m2
    #Limpiar y compilar
     - mvn -B clean compile
    #Ejecutar tests unitarios
    # - mvn -B -Djava.security.egd=file:///dev/urandom -Ddocker.skip=true test
    #Ejecutar tests de integraci√≥n
     - mvn -B -Djava.security.egd=file:/dev/./urandom -Ddocker.skip=true -Dunit.skip=true verify
    #Desplegar jars en repo byteflair
    # - mvn -B -Ddocker.skip=true -Dunit.skip=true -Dint.skip=true -Dmaven.install.skip=true deploy
     - cp -a /root/.m2 /drone
    when:
      branch: [master, dev, feat/drone]
  #Guardamos la cache
  sftp_cache_save:
    image: plugins/sftp-cache
    server: dev.byteflair.com:22
    path: /home/deployment/cache/repository/
    rebuild: true
    mount: /drone/.m2/
    when:
      branch: [master, dev, feat/drone]
services:
  mysqldb:
    image: mysql:5.5
    environment:
     - MYSQL_ROOT_PASSWORD=password
     - MYSQL_USER=oauth_server
     - MYSQL_PASSWORD=password
     - MYSQL_DATABASE=oauth_db
    ports:
     - "3306:3306"
    when:
      branch: [master, dev, feat/drone]
  postgresdb:
    image: postgres:9.5
    environment:
     - POSTGRES_USER=oauth_server
     - POSTGRES_PASSWORD=password
     - POSTGRES_DB=oauth_db
    ports:
     - "5432:5432"
    when:
      branch: [master, dev, feat/drone]