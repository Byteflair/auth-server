workspace:
  base: /drone
  path: src
pipeline:
  #Restauramos la cache
  sftp_cache_restore:
    image: plugins/sftp-cache
    server: dev.byteflair.com:22
    path: /home/deployment/cache/repository/
    restore: true
    mount: /drone/.m2/
  build:
    image: maven:3-jdk-8
    commands:
    #Copiar settings de maven
     - if [ -d "/drone/.m2" ]; then
           cp -a /drone/.m2 /root ;
       fi
    #Copiar settings de maven
     - cp /drone/src/.drone/settings.xml /root/.m2
    #Limpiar y compilar
     - mvn -B -Dint.skip=true -Ddocker.skip=true clean install
     - mvn -B sonar:sonar
  i_test_postgresql:
    image: maven:3-jdk-8
    commands:
    #Ejecutar tests de integraci√≥n
     - cd /${DIRECTORY} && mvn -B -Djava.security.egd=file:/dev/./urandom -Dunit.skip=true verify && cd ..
     - cp -a /root/.m2 /drone
    when:
      matrix:
        DIRECTORY: oauth2-server-postgresql
        DATABASE: postgres:9.5
      matrix:
        DIRECTORY: oauth2-server-mysql
        DATABASE: mysql:5.5
  deploy:
    image: maven:3-jdk-8
    commands:
     #Copiar settings de maven
     - if [ -d "/drone/.m2" ]; then
           cp -a /drone/.m2 /root ;
       fi
     #Copiar settings de maven
     - cp /drone/src/.drone/settings.xml /root/.m2
     - mvn -B -Dunit.skip=true -Dint.skip=true -Dmaven.install.skip=true deploy -D jarName=
    when:
      branch: [dev, release/*, master]
    #Prueba
  sftp_cache_save:
    image: plugins/sftp-cache
    server: dev.byteflair.com:22
    path: /home/deployment/cache/repository/
    rebuild: true
    mount: /drone/.m2/
    when:
      status:  [ failure, success ]
services:
  postgresql:
    image: postgres:9.5
    environment:
      POSTGRES_USER: oauth_server
      POSTGRES_PASSWORD: password
      POSTGRES_DB: oauth_db
  mysql:
    image: mysql:5.5
    environment:
      MYSQL_USER: oauth_server
      MYSQL_ROOT_PASSWORD: password
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: oauth_db
matrix:
  DIRECTORY:
    - 1.4
    - 1.3
  DATABASE:
    - mysql:5.5
    - postgres:9.5