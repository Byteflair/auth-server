workspace:
  base: /drone
  path: src
pipeline:
  #Restauramos la cache
  sftp_cache_restore:
    image: plugins/sftp-cache
    server: dev.byteflair.com:22
    path: /home/deployment/cache/repository/
    restore: true
    mount: /drone/.m2/
    when:
      matrix:
        DIRECTORY: oauth2-server-postgresql
        DATABASE: postgresql
      matrix:
        DIRECTORY: oauth2-server-mysql
        DATABASE: mysql
  build:
    image: maven:3-jdk-8
    commands:
    #Copiar settings de maven
     - if [ -d "/drone/.m2" ]; then
           cp -a /drone/.m2 /root ;
       fi
    #Copiar settings de maven
     - cp /drone/src/.drone/settings.xml /root/.m2
    #Limpiar y compilar
     - mvn -B -Dint.skip=true -Ddocker.skip=true -Dspring.profiles.active=dev clean install
     - mvn -B sonar:sonar
     when:
       matrix:
         DIRECTORY: oauth2-server-postgresql
         DATABASE: postgresql
       matrix:
         DIRECTORY: oauth2-server-mysql
         DATABASE: mysql
  i_test_postgresql:
    image: maven:3-jdk-8
    commands:
    #Ejecutar tests de integraci√≥n
     - cd /${DIRECTORY} && mvn -B -Djava.security.egd=file:/dev/./urandom -Dunit.skip=true -Dspring.profiles.active=dev verify && cd ..
     - cp -a /root/.m2 /drone
    when:
      matrix:
        DIRECTORY: oauth2-server-postgresql
        DATABASE: postgresql
      matrix:
        DIRECTORY: oauth2-server-mysql
        DATABASE: mysql
  deploy:
    image: maven:3-jdk-8
    commands:
     #Copiar settings de maven
     - if [ -d "/drone/.m2" ]; then
           cp -a /drone/.m2 /root ;
       fi
     #Copiar settings de maven
     - cp /drone/src/.drone/settings.xml /root/.m2
     - mvn -B -Dunit.skip=true -Dint.skip=true -Dmaven.install.skip=true deploy -D jarName=
    when:
      branch: [dev, release/*, master]
      matrix:
        DIRECTORY: oauth2-server-postgresql
        DATABASE: postgresql
      matrix:
        DIRECTORY: oauth2-server-mysql
        DATABASE: mysql
  sftp_cache_save:
    image: plugins/sftp-cache
    server: dev.byteflair.com:22
    path: /home/deployment/cache/repository/
    rebuild: true
    mount: /drone/.m2/
    when:
      status:  [ failure, success ]
      matrix:
        DIRECTORY: oauth2-server-postgresql
        DATABASE: postgresql
      matrix:
        DIRECTORY: oauth2-server-mysql
        DATABASE: mysql
services:
  postgresql:
    image: postgres:9.5
    environment:
     - POSTGRES_USER=oauth_server
     - POSTGRES_PASSWORD=password
     - POSTGRES_DB=oauth_db
    ports:
      "5432:5432"
  mysql:
    image: mysql:5.5
    environment:
     - MYSQL_USER=oauth_server
     - MYSQL_ROOT_PASSWORD=password
     - MYSQL_PASSWORD=password
     - MYSQL_DATABASE=oauth_db
    ports:
      "3306:3306"
matrix:
  DIRECTORY:
    - oauth2-server-postgresql
    - oauth2-server-mysql
  DATABASE:
    - mysql
    - postgresql